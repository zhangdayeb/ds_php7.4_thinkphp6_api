<?php


namespace app\admin\controller\order;


use app\admin\controller\Base;

use app\common\model\OrderModel as models;
use app\validate\Order as validates;
use app\common\traites\PublicCrudTrait;
use think\exception\ValidateException;

class Order extends Base
{
    protected $model;
    use PublicCrudTrait;

    /**
     * 订单控制器
     */
    public function initialize()
    {
        $this->model = new models();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        //当前页
        $page = $this->request->post('page', 1);
        //每页显示数量
        $limit = $this->request->post('limit', 10);
        //查询搜索条件
        $post = $this->request->post();
        $map = [];
        if (isset($post['pay_no']) && $post['pay_no']) {
            $map[] = ['pay_no', 'like', '%' . $post['pay_no'] . '%'];
        }
        if (isset($post['user_name']) && $post['user_name']) {
            $map[] = ['d.user_name', 'like', '%' . $post['user_name'] . '%'];
        }
        if (isset($post['id']) && $post['id']) {
            $map[] = ['a.id', '=', $post['id']];
        }
        if (isset($post['uid']) && $post['uid']) {
            $map[] = ['a.uid', '=', $post['uid']];
        }
        if (isset($post['agent_uid']) && $post['agent_uid']) {
            $map[] = ['b.id', '=', $post['agent_uid']];
        }
        if (isset($post['pay_status']) && $post['pay_status'] >= 0) {
            $map[] = ['a.pay_status', '=', $post['pay_status']];
        }
        $list = $this->model->page_list($map, $limit, $page);
        return $this->success($list);
    }

    public function edit()
    {
        //过滤数据
        $postField = 'status,id';
        $post = $this->request->only(explode(',', $postField), 'post', null);
        $post = array_filter($post);

        //验证数据
        try {
            validate(validates::class)->scene('edit')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
            return $this->failed($e->getError());
        }

        //执行修改数据
        $save = $this->model->update($post);
        if ($save) return $this->success([]);
        return $this->failed('修改失败');
    }


}