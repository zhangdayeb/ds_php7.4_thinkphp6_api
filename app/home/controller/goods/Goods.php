<?php

namespace app\home\controller\goods;

use app\common\model\AdminModel;
use app\common\model\OrderModel;
use app\common\model\Video;
use app\common\traites\PublicCrudTrait;
use app\home\controller\Base;
use app\home\controller\pay\Index as PayIndex;
use app\home\controller\service\BranchService;
use app\home\controller\service\GoodsService;
use hg\apidoc\annotation as Apidoc;
use think\facade\Db;

/**
 * @Apidoc\Title("视频相关")
 * */
class Goods extends Base
{
    protected $model;
    protected $service;
    use PublicCrudTrait;


    public function initialize()
    {
        $this->service = new GoodsService();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @Apidoc\Title("获取购买套餐")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("type", type="int",require=true, desc="1 视频套餐 2充值套餐")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function level()
    {
        $type = $this->request->post('type/d', 1);
        $list = $this->service->video_level($type);
        return show($list);
    }

    /**
     * @Apidoc\Title("视频列表")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("search", type="string",require=true, desc="关键字搜索")
     * @Apidoc\Param("page", type="int",require=true, desc="页数")
     * @Apidoc\Param("limit", type="int",require=true, desc="分页条数")
     * @Apidoc\Param("type", type="int",require=true, desc="视频分类")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function goods_auth_list()
    {
        //获取视频列表
        $list = $this->service->common_video_list();
        if (!$list)  return show([],config('ToConfig.http_code.error'),'没有视频哦！');
        return show($list);
    }

    /**
     * @Apidoc\Title("获取已购买视频列表")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("page", type="int",require=true, desc="页数")
     * @Apidoc\Param("limit", type="int",require=true, desc="分页条数")
     * @Apidoc\Param("type", type="int",require=true, desc="视频分类")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function goods_list()
    {
        //查询用户购买的套餐
        $user_video_level = $this->service->user_video_level();
        if (!$user_video_level){
            //查询购买的单视频
            $alone_list = $this->service->alone_list();
            //存在已经购买的视频
            if (!empty($alone_list)){
                return show($alone_list);
            }
            return show([],config('ToConfig.http_code.error'),'没有已经购买的视频哦！');
        }

        //if (!$user_video_level && empty($alone_list)) return show([],config('ToConfig.http_code.error'),'没有已经购买的视频哦！');
        //获取视频列表
        $list = $this->service->user_video_list($this->request,$user_video_level);
        if (!$list) return show([],config('ToConfig.http_code.error'),'没有视频哦！');

        return show($list);
    }
    /**
     * @Apidoc\Title("获取已经购买的单片视频列表")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("page", type="int",require=true, desc="页数")
     * @Apidoc\Param("limit", type="int",require=true, desc="分页条数")
     * @Apidoc\Param("type", type="int",require=true, desc="视频分类")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function alone_list()
    {
        $find = $this->service->alone_list();
        return show($find);
    }


    /**
     * @Apidoc\Title("获取当前视频")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("id", type="int",require=true, desc="视频ID")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function video()
    {
        $find = $this->service->user_video_details();
        if (!$find) return show([],config('ToConfig.http_code.error'),'没有该视频哦！');
        return show($find);
    }


    /**
     * @Apidoc\Title("视频单独购买")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("id", type="int",require=true, desc="视频ID")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function alone_video_purchase()
    {
        //视频id
        $find = $this->service->alone_video_purchase();
        if ($find['code'] != 1) return show([],config('ToConfig.http_code.error'),$find['msg']);
        return show($find);
    }


    /**
     * @Apidoc\Title("购买套餐")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("id", type="int",require=true, desc="套餐ID")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function purchase()
    {
        //获取套餐信息
        $bool = $this->service->purchase_video_level();
        if ($bool['code'] != 1) return show([],config('ToConfig.http_code.error'),$bool['msg']);
        //购买成功
        return show($bool);
    }

    /**
     * 查看订单是否支付成功
     * @return \think\response\Json
     */
    public function  continuepay()
    {
        $id = $this->request->post('id', 0);
        $returnUrl = $this->request->post('return_url', '');
        // $isorder = $this->request->post('isorder', 0);
        $ordre_info = OrderModel::findOrEmpty ($id);
        if ($ordre_info->isEmpty ()){
            return show([],config('ToConfig.http_code.error'),'没有找到相应订单');
        }
        // if ($isorder == 1){
        //     //生成订单号。
        //     $ordre_info->pay_no = orderCode();
        //     $ordre_info->save();
        // }
        $ordre_info = $ordre_info->toArray();
        if (isset($ordre_info['pay_status']) && ($ordre_info['pay_status'] === 0 || $ordre_info['pay_status'] =='未支付')){
            $result = PayIndex::submit ($ordre_info['pay_type'],['pay_no'=>$ordre_info['pay_no'],'pay_price'=>$ordre_info['pay_price'],'describe_order'=>$ordre_info['describe_order'],'order_id'=>$ordre_info['id'],'return_url'=>$returnUrl ]);
            $result['pay_status'] = 0;
            $result['id'] = $ordre_info['id'];
            $result['order_no'] = $ordre_info['pay_no'];
            return show ($result);
        }
        return show (['pay_status'=>1]);
    }
    /**
     * @Apidoc\Title("充值")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("price", type="string",require=true, desc="充值金额")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function recharge()
    {
        $price = $this->request->post('price/d', 0);

        if ($price <= 0)  return show([],config('ToConfig.http_code.error'),'充值金额错误');
        $admin = session('home_user');
        //生成充值订单
        $save = $this->service->recharge_user($admin, $price);
        if ($save['code'] == 0)  return show([],config('ToConfig.http_code.error'),$save['msg']);
        //发起付款
        $res = $this->service->recharge_price($save['recharge_id'],$price);
        //0 是失败
        if ($res['code'] == 0 ) return show([],config('ToConfig.http_code.error'),$res['msg']);
        //充值成功，分配分销奖励
        $BranchService = new BranchService();
        $money_log = $BranchService->branch(session('home_user'),['price' => $price, 'order_id' => $res['order_id']],403);
        //if (!$money_log) return show([],config('ToConfig.http_code.error'),$money_log['msg']);
        return show();
    }

    /**
     * 统计播放量
     * @return \think\response\Json
     */
    public function  reckon()
    {
        $id = $this->request->post('id/d', 0);
        //视频ID错误
        if ($id <= 0) return show([],config('ToConfig.http_code.error'),'参数缺失');
        //查询视频
        Video::update(['id'=>$id,'play_num'=>Db::raw ('play_num+1')]);
        return show();
    }

    /**
     * 获取视频免费时长
     * @return mixed|null
     */
    public function free_time()
    {
        $configName = 'reward_allocation';
        $info = getSystemConfig($configName);
        $user = session('home_user');
        if ($info) {
            $arr = json_decode($info, true);
            $sysFreeTime = (int)$arr['free_time'];
            $agentUid = $user['agentid'];
            $agentUserFreeTime = 0;
            if ($agentUid) {
                $agentUserFreeTime = AdminModel::where('id', $agentUid)->value('free_time');
            }
            return $this->success(['free_time' => $agentUserFreeTime ?: $sysFreeTime]);
        }
        return $this->failed('修改失败');
    }

}