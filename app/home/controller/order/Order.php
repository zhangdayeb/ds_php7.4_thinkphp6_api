<?php

namespace app\home\controller\order;

use app\common\model\OrderModel;
use app\common\model\Video;
use app\common\model\VideoVipLevel as models;
use app\common\traites\PublicCrudTrait;
use app\home\controller\Base;
use hg\apidoc\annotation as Apidoc;

/**
 * @Apidoc\Title("订单相关")
 * */
class Order extends Base
{
    protected $model;
    protected $home_user;
    use PublicCrudTrait;

    public function initialize()
    {
        $this->home_user = session('home_user');
        //判断不存在时直接 return出去
        $this->model = new models();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @Apidoc\Title("获取套餐")
     * @Apidoc\Method("GET")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function level()
    {
        $list = $this->model->where('status', 1)->select();
        return show($list);
    }

    /**
     * @Apidoc\Title("获取购买套餐")
     * @Apidoc\Method("POST")
     * @Apidoc\Param("id", type="int",require=true, desc="视频ID")
     * @Apidoc\Returned("data", type="bool", desc="返回成功失败结果")
     */
    public function video()
    {
        $id=$this->request->post('id',0);
        if ($id <=0 ) return show([],config('ToConfig.http_code.error'),'视频错误');
        $find = (new Video())->find($id);
        if (empty($find)) return show([],config('ToConfig.http_code.error'),'没有该视频');
        return show($find);
    }


    public function list()
    {
        $homeUser = session('home_user');
        $uid = $homeUser['id'];
        $page = $this->request->post('page/d', 1);
        $limit = $this->request->post('limit/d', 10);
        $payStatus = $this->request->post('pay_status/d', -1);
        $model = new OrderModel();
        $fields = 'id,pay_no,pay_price,pay_channel,pay_status,describe_order,pay_time,create_time,uid,status';
        $where = [
            ['uid', '=', $uid],
        ];
        if ($payStatus >= 0) {
            $where[] = ['pay_status', '=', $payStatus];
        }
        $list = $model->get_user_order_list($where, $limit, $page, $fields);
        return show($list->toArray());
    }
}